<<<<<<< HEAD
													=NetCon Team=
												-Cahier des Charges-
Les etapes :

- Réaliser le moteur graphique sous openGL sous linux
		* Creation d'une fenetre openGL
		* Affichage de sprites texturables
		* Gestion de la transparence
		* Definition matricielle
		* Gestion de la souris	
		
- Réalisation des images au format PNG (Filtre de transparence si necessaire)
		* Vaisseaux
		* Planetes
		* Background
		* Effets speciaux (rayons, explosions, etc)
		* GUI

- Gameplay
		* Click and play + Clavier(nb vaisseaux)
		
		- Gestion des planetes
			* Capacité de selectionner une planete ou plus (cadre de selection souris, click, double click)
			* Generation des vaisseaux en fonction de la taille, sauf pour planetes neutres
			* Generation de la map (position des planetes random, nb de vaisseaux, etc)
			* Affichage Proprietaire/Adversaire, Neutre
		
		- Gestion des vaisseaux
			* Collision avec les planetes et contournement
			* Affichage de chaque vaisseau
			* Gestion par escadrons, avec possibilité de selection et redirection
			* Gestion des attaques et prise des planetes
			
		- Gestion des effets speciaux
			* Explosions lors des collisions
			* Cadre de selection
			* Rayons de direction
			* Cercles de selection unique
			* Effet de la prise des planetes
			
- Gestion du reseau
		* Reception/Emission de la cible, et du point de depart (2 cas : planete ou escadron redirigé)
		* Reception/Emission de messages texte
		* Gestion jusqu'à X joueurs
			
- Gestion des scores
		* Systeme de points attribués en fonction de l'ordre de defaite
		* Statistiques (nombre de planetes prises, vaisseaux, vaisseaux detruits, etc)
		
- Suggestions
			* Mise en place d'un blocus de vaisseaux autour des planetes pour les bloquer
			* Radar, fog of war
			* Upgrade des planetes et des vaisseaux (ratio de generation d'unités, vitesse de deplacement)
- TO DO (urgence)
	* Finir de réaliser le groupe sous Skype (texte et audio)
	* Finir le moteur graphique sous OpenGL
	* Finir la gestion de la synchronisation des cahiers des charges (Git)
	
=======
****************************************=NetCon Team=********************************************
*************************************-Cahier des Charges-****************************************




Les etapes :

    - Réaliser le moteur graphique sous openGL sous linux

	  * Creation d'une fenetre openGL
	  * Affichage de sprites texturables
	  * Gestion de la transparence
	  * Definition matricielle
	  * Gestion de la souris

    - Réalisation des images au format PNG (Filtre de transparence si necessaire)

	  * Vaisseaux
	  * Planetes
	  * Background
	  * Effets speciaux (rayons, explosions, etc)
	  * GUI

    - Gameplay

	  * Click and play + Clavier(nb vaisseaux)

	  - Gestion des planetes

	      * Capacité de selectionner une planete ou plus (cadre de selection souris, click, double click)
	      * Generation des vaisseaux en fonction de la taille, sauf pour planetes neutres
	      * Generation de la map (position des planetes random, nb de vaisseaux, etc)
	      * Affichage Proprietaire/Adversaire, Neutre

	  - Gestion des vaisseaux

	      * Collision avec les planetes et contournement
	      * Affichage de chaque vaisseau
	      * Gestion par escadrons, avec possibilité de selection et redirection
	      * Gestion des attaques et prise des planetes

    - Gestion des effets speciaux

	   * Explosions lors des collisions
	   * Cadre de selection
	   * Rayons de direction
	   * Cercles de selection unique
	   * Effet de la prise des planetes

    - Gestion du reseau
    
	  * Reception/Emission de la cible, et du point de depart (2 cas : planete ou escadron redirigé)
	  * Reception/Emission de messages texte
	  * Gestion jusqu'à X joueurs

    - Gestion des scores

	  * Systeme de points attribués en fonction de l'ordre de defaite
	  * Statistiques (nombre de planetes prises, vaisseaux, vaisseaux detruits, etc)

    - Suggestions

	  * Mise en place d'un blocus de vaisseaux autour des planetes pour les bloquer
	  * Radar, fog of war
	  * Upgrade des planetes et des vaisseaux (ratio de generation d'unités, vitesse de deplacement)

    - TO DO (urgence)

	  * Finir de réaliser le groupe sous Skype (texte et audio)
	  * Finir le moteur graphique sous OpenGL
	  * Finir la gestion de la synchronisation des cahiers des charges (Git)
>>>>>>> 91bdaa3ad64e182a6874b927601ae0e91355c970
